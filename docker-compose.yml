ALIAS for updating and deploying = elkswarm
docker stack deploy -c /root/docker-compose.yml elk
pssh -h /pssh/all sshfs elk:/tank1/elk /mnt/ELK/backups -o allow_other
version: '3'

services:
  master:
    image: jaronfitz/elk_swarm
    volumes:
      - /data/master:/data
      - /mnt/ELK/backups:/repo1
      - /conf/master/env:/conf/env
    environment:
      TYPE: MASTER
      UNICAST_HOSTS: master
      MIN_MASTERS: 1
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      placement:
        constraints:
          - node.hostname == ds1
  data1:
    image: jaronfitz/elk3
    volumes:
      - /data/data1:/data
      - /mnt/ELK/backups:/repo1
      - /conf/data1/env:/conf/env
    environment:
      TYPE: DATA
      UNICAST_HOSTS: master
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
#        delay: 90s
      placement:
        constraints:
          - node.hostname == ds1
  data2:
    image: jaronfitz/elk3
    volumes:
      - /data/data2:/data
      - /mnt/ELK/backups:/repo1
      - /conf/data2/env:/conf/env
    environment:
      TYPE: DATA
      UNICAST_HOSTS: master
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
#        delay: 90s
      placement:
        constraints:
          - node.hostname == ds2
  data3:
    image: jaronfitz/elk3
    volumes:
      - /data/data3:/data
      - /mnt/ELK/backups:/repo1
      - /conf/data3/env:/conf/env
    environment:
      TYPE: DATA
      UNICAST_HOSTS: master
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
#        delay: 90s
      placement:
        constraints:
          - node.hostname == ds3
  data4:
    image: jaronfitz/elk3
    volumes:
      - /data/data4:/data
      - /mnt/ELK/backups:/repo1
      - /conf/data4/env:/conf/env
    environment:
      TYPE: DATA
      UNICAST_HOSTS: master
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
#        delay: 90s
      placement:
        constraints:
          - node.hostname == ds4
  gateway:
    image: jaronfitz/elk_swarm
    volumes:
      - /data/gateway:/data
      - /mnt/ELK/backups:/repo1
      - /conf/gateway/env:/conf/env
    ports:
      - "9201:9200"
      - "9301:9300"
    environment:
      TYPE: GATEWAY
      UNICAST_HOSTS: master
    deploy: 
      placement:
        constraints:
          - node.hostname == ds1
  ingest:
    image: jaronfitz/elk_swarm
    volumes:
      - /data/ingest:/data
      - /mnt/ELK/backups:/repo1
      - /conf/ingest/env:/conf/env
    ports:
      - "9222:9200"
    environment:
      TYPE: INGEST
      UNICAST_HOSTS: master
    deploy:
      placement:
        constraints:
          - node.hostname == ds1
  kibana:
    image: kibana:5.5.0
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://gateway:9200
    deploy: 
      placement:
        constraints:
          - node.hostname == ds1
  cerebro:
    image: yannart/cerebro
    ports:
      - "9000:9000"
    deploy: 
      update_config:
        delay: 120s
      placement:
        constraints:
          - node.hostname == ds1
  kibanaproxy:
    image: nginx
    volumes: 
      - /root/kibanaproxy/certs/:/etc/nginx/certs
      - /root/kibanaproxy/conf.d/:/etc/nginx/conf.d
    ports:
      -  "443:443"
      -  "80:80"
    environment:
      - NGINX_HOST=kibana.infobate.com
      - NGINX_PORT=443
    deploy:  
      placement:
        constraints:
          - node.hostname == ds1
